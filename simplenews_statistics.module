<?php

/**
 * @file
 * Gathers newsletter statistics.
 */
 
/**
 * Implementation of hook_menu().
 */
function simplenews_statistics_menu() {
//   $items['admin/content/simplenews/statistics'] = array(
//     'title' => 'Statistics',
//     'description' => 'View the openings/rate and clicks/CTR for your newsletters',
//     'type' => MENU_LOCAL_ACTION,
//     'page callback' => 'drupal_get_form',
//     'page arguments' => array('simplenews_statistics_admin_form'),
//     'access arguments' => array('administer newsletters'),
//   );
  $items['admin/content/simplenews/statistics/%node'] = array(
    'title' => 'Statistics Details',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simplenews_statistics_admin_opens', 4),
    'access arguments' => array('administer newsletters'),
  );
  $items['admin/content/simplenews/statistics/%node/opens'] = array(
    'title' => 'Newsletter opens',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/simplenews/statistics/%node/clicks'] = array(
    'title' => 'Newsletter clicks',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simplenews_statistics_admin_clicks', 4),
    'access arguments' => array('administer newsletters'),
  );
  $items['simplenews/statistics/view'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'simplenews_statistics_view',
    'access arguments' => array('access content'),
  );
  $items['simplenews/statistics/click'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'simplenews_statistics_click',
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implementation of hook_help().
 */
function simplenews_statistics_help($path) {
  switch ($path) {
    case 'admin/help#simplenews_statistics':
      $help = '<p>'. t('Simplenews Statistics gathers the open rate and CTR of a send newsletter.') ."<br />\n";
      $help .= t("Open Rate is the number of people who open a newsletter divided by the amount of subscriptions.") ."<br />\n";
      $help .= t("CTR (click-through rate) is the number of people who clicked a link in a newsletter divided by the amount of subscriptions") ."</p>\n";
      return $help;
    case 'admin/content/simplenews/statistics':
      $help = '<p>'. t('Shows the open rate and CTR for your newsletters.') ."<p>\n";
      return $help;
    case 'admin/content/simplenews/statistics/%':
      $help = '<p>'. t('Shows who and how many times the newsletter has been openend.') ."<p>\n";
      return $help;
    case 'admin/content/simplenews/statistics/%/clicks':
      $help = '<p>'. t('Listing of all clicks for the newsletter.') ."<p>\n";
      return $help;
  }
}

/**
 * simplenews_statistics_view.
 *
 * Gathers the opens
 * @todo: optimise me!
 */
function simplenews_statistics_view() {
	
  $stat = _simplenews_statistics_decode($_GET);
 // krumo($stat);
  if ($stat['mail'] && $stat['nid']) {
    // Update total
    _simplenews_statistics_open_add($stat['nid']);
    
    $opens = db_select('simplenews_statistics_opens','s')
	    ->condition('nid',$stat['nid'],'=')
    	->condition('email',$stat['mail'],'=')
	    ->fields('s',array('opens'))
	    ->execute()
	    ->fetchField();
    
    if(!$opens){
    	$id = db_insert('simplenews_statistics_opens')
    		->fields(array('nid'=>$stat['nid'],'email'=>$stat['mail'], 'opens'=>1,'timestamp'=>time()))
    		->execute();
    }else{
    	$id = db_update('simplenews_statistics_opens')
    		->fields(array('opens'=>$opens+1,'timestamp'=>time()))
    		->condition('nid',$stat['nid'],'=')
    		->condition('email',$stat['mail'],'=')
    		->execute();
    }
    
  }
}

/**
 * simplenews_statistics_click.
 *
 * Gathers the clicks
 *  @todo: optimise me!
 */
function simplenews_statistics_click() {
  $stat = _simplenews_statistics_decode($_GET);
 // krumo($stat);
  if ($stat['mail'] && $stat['nid'] && $stat['url']) {
    // Update total
    _simplenews_statistics_click_add($stat['nid']);
    db_insert('simplenews_statistics_clicks')
	    ->fields(array(
	    	'email'=>$stat['mail'],
	    	'nid'=>$stat['nid'],
	    	'url'=>urldecode($stat['url']),
	    	'timestamp'=>time()
	    ))->execute();
  
    drupal_goto(urldecode($stat['url']));
  }
  
  drupal_goto();
}

/**
 * Implemetation of hook_mail_alter().
 *
 * Adds a hidden image to the body and counts the amount of emails send
 * 
 * @param $message
 *  Mail message array.
 *  
 *  @todo: optimise me!
 */
function simplenews_statistics_mail_alter(&$message) { 
	//krumo($message);exit;
  if ($message['module'] == 'simplenews' && $message['params']['simplenews_source']->getFormat() =='html') {
      $nid   = $message['params']['simplenews_source']->getNode()->nid;
      $mail  = $message['params']['simplenews_source']->getRecipient();
    
      // Need absolute urls
       _simplenews_statistics_absolute($message['body']);
      
      // Parse body
      _simplenews_statistics_parse_links($message['body'], $nid, $mail);
      
      // Add view image
      _simplenews_statistics_image_tag($message['body'], $nid, $mail);
      
      //not count tests email
      if ($message['key']=='test'){return ;}
      
      // Count
      $sended = db_select('simplenews_statistics','s')
      	->condition('nid',$nid,'=')
      	->fields('s',array('send'))
      	->execute()
      	->fetchField();
      
      if (!$sended) {
        $id = db_insert('simplenews_statistics')
        	->fields(array('nid'=>$nid, 'send'=>1))
        	->execute();
      }
      else {
        $id = db_update('simplenews_statistics')
        	->fields(array('send'=>$sended+1))
        	->condition('nid',$nid,'=')
        	->execute();
      }
     // krumo($message,$sended,$id);exit;
  }
  
}

function _simplenews_statistics_absolute(&$body) {
  if (is_array($body)) {
    foreach ($body as $key => $element) {
      _simplenews_statistics_absolute($body[$key]);
    }
  }else{  
    // R to A
    $body = preg_replace(
      '/(src|href)=(\'|")\//',
      '$1=$2'. url('<front>', array('absolute' => TRUE)),
      $body
    );
  }
}

/*
 * Parse links in the body
 */
function _simplenews_statistics_parse_links(&$body, $nid, $mail) {
  if (is_array($body)) {
    foreach ($body as $key => $element) {
      _simplenews_statistics_parse_links($body[$key], $nid, $mail);
    }
  }else{     
    // Replace links   
    $pattern = '/(<a[^>]+href=")([^"]*)/emi';
    $body = preg_replace($pattern, '"\\1"._simplenews_statistics_replace_url("\2", $nid, $mail)', $body);
  }
}

/*
 * Add hidden image for view statistics
 */
function _simplenews_statistics_image_tag(&$body, $nid, $mail) {
  if (is_array($body)) {
    foreach ($body as $key => $element) {
      _simplenews_statistics_image_tag($body[$key], $nid, $mail);
      return; // Only once
    }
  }else{  
    require_once drupal_get_path('module', 'simplenews_statistics') .'/rc4.inc';
      
    // Add hidden image
    $pars = 'nid='. check_plain($nid) .'&mail='. check_plain($mail);
    $pars = rc4Encrypt(simplenews_private_key(), $pars);
    $pars_hash = md5($pars);
    $url = url('simplenews/statistics/view', array('absolute' => TRUE, 'query' => array('p' => _simplenews_statistics_encode_parameter($pars), 
                                                                                        'h' => _simplenews_statistics_encode_parameter($pars_hash))));
    
    $body .= '<img src="'. $url .'" width="1" height="1">';
  }
}

/**
 * Statistics overview
 */
//altering simplenews_admin_issues_alter
function simplenews_statistics_form_simplenews_admin_newsletter_issues_alter(&$form, &$form_state){
	//krumo($form, $form_state);
	//t('Open rate'), t('CTR'), t('Details')
	//move operations to end
	$op = $form['admin']['issues']['#header']['operations'];
	unset($form['admin']['issues']['#header']['operations']);
	
	$header = array(
		#'stat_sended' => array('data' => t('Emails Sent')),
		'stat_open_rate' => array('data' => t('Open rate')),
		'stat_ctr' => array('data' => t('CTR')),
		'operations' =>$op,

	);
	$form['admin']['issues']['#header'] += $header;
	
	$nids = array_keys($form['admin']['issues']['#options']);
	//get sended
// 	$sended = db_select('simplenews_statistics','s')
// 		->condition('nid',$nids,'IN')
// 		->fields('s',array('nid','send'))
// 		->execute()
// 		->fetchAllKeyed();
	//get clicks
// 	$clicks = db_select('simplenews_statistics_clicks','c')
// 		->condition('nid',$nids,'IN')
// 		->fields('c',array('nid','url'))
		#->groupBy('email')
// 		->execute()
// 		->fetchAllKeyed();
	
	//get opens
// 	$opens = db_select('simplenews_statistics_opens','o')
// 		->condition('nid',$nids,'IN')
// 		->fields('o',array('nid'))
// 		->groupBy('o.email')
// 		->countQuery()
// 		->execute();
	
	//get base stats
	$base_stat = db_select('simplenews_statistics','s')
		->condition('nid',$nids,'IN')
		->fields('s')
		->execute()
		->fetchAllAssoc('nid');
	
	//krumo($form,$nids,$base_stat);
	

	foreach($form['admin']['issues']['#options'] as $row => $option){

		#$form['admin']['issues']['#options'][$row]['stat_sended'] = !empty($base_stat[$row])?$base_stat[$row]->send : 0 ;
		$form['admin']['issues']['#options'][$row]['stat_open_rate'] = !empty($base_stat[$row])?$base_stat[$row]->opens : 0 ;
		$form['admin']['issues']['#options'][$row]['stat_ctr'] = !empty($base_stat[$row])?$base_stat[$row]->clicks : 0 ;
		$form['admin']['issues']['#options'][$row]['operations'] .= '  '.l(t('stats'), 'admin/content/simplenews/statistics/'.$row);
	}
}


/**
 * Newsletter opens overview
 */
function simplenews_statistics_admin_opens($form,&$form_state, $node = NULL) {
  drupal_set_title(check_plain($node->title).'  '.t('Opens overview'));
  $form = array();
  // Build the sortable table header.
  $header=array(
  	'email' => array('data' => t('Email'), 'field' => 'o.email'),
  	'open_time' => array('data' => t('Last open time'), 'field' => 'o.timestamp', 'sort' => 'desc'),
  	'opens' => array('data' => t('Open(s)'), 'field' => 'o.opens'),
  );
  
  //get data 
  $query = db_select('simplenews_statistics_opens', 'o')->extend('PagerDefault')->extend('TableSort');
  $result = $query
	  ->fields('o')
  	  ->condition('nid',$node->nid,'=')
	  ->limit(80)
	  ->orderByHeader($header)
	  ->execute();
  
  //build table content
  $options = array();
  $total_count = 0;
  foreach ($result as $stat){
  	$options[]=array(
  		'email' => $stat->email,
  		'open_time' => format_date($stat->timestamp),
  		'opens' => $stat->opens,
  	);
  	$total_count = $total_count+$stat->opens;
  }
  $form['total_inf'] = array(
    	'#markup' => '<b>'.t('Total opens').':</b> '.$total_count,
  );
  $form['stat_opens'] = array(
  	'#type' => 'tableselect', 
  	'#header' => $header,
  	'#options' => $options, 
  	'#empty' => t('No stats available'), 
  );
  $form['pager'] = array('#markup' => theme('pager'));

  return $form;
}

/**
 * Newsletter clicks overview
 */
function simplenews_statistics_admin_clicks($form,&$form_state, $node = NULL) {
  drupal_set_title(check_plain($node->title). '  ' .t('Clicks overview'));
  $form = array();

  // Build the sortable table header.
  $header=array(
    	'url' => array('data' => t('Url'), 'field' => 'c.url'),
  		'email' => array('data' => t('Email'), 'field' => 'c.email'),
    	'open_time' => array('data' => t('Click time'), 'field' => 'c.timestamp', 'sort' => 'desc'),
  );
  //get data
  $query = db_select('simplenews_statistics_clicks', 'c')->extend('PagerDefault')->extend('TableSort');
  $result = $query
	  ->fields('c')
	  ->condition('nid',$node->nid,'=')
	  ->limit(80)
	  ->orderByHeader($header)
	  ->execute();
  
  //build table content
  $options = array();
  foreach ($result as $stat){
  	//krumo($stat);
  	$options[]=array(
  		'url'=> l(check_plain($stat->url),$stat->url,array('attributes'=>array('target'=>'_blank'))),
  	  	'email' => $stat->email,
  	  	'open_time' => format_date($stat->timestamp),
  	);
  }
  $form['total_inf'] = array(
  	'#markup' => '<b>'.t('Total clicks').':</b> '.count($options),
  );

  $form['stat_opens'] = array(
    	'#type' => 'tableselect', 
    	'#header' => $header,
    	'#options' => $options, 
    	'#empty' => t('No stats available'), 
  );
  $form['pager'] = array('#markup' => theme('pager'));
  return $form;
}

/**
 * Helper functions
 */ 
 
/**
* Alter link to go through statistics
*/
function _simplenews_statistics_replace_url($match, $nid, $mail) {
  if (substr($match, 0, 1) == "#")
    return $match;

  require_once drupal_get_path('module', 'simplenews_statistics') .'/rc4.inc';
  $pars = 'nid='. check_plain($nid) .'&mail='. check_plain($mail) .'&url='. check_url($match);
  $pars = rc4Encrypt(simplenews_private_key(), $pars);
  $pars_hash = md5($pars);
  
  return url('simplenews/statistics/click', array('absolute' => TRUE, 'query' => array('p' => _simplenews_statistics_encode_parameter($pars), 
                                                                                       'h' => _simplenews_statistics_encode_parameter($pars_hash))));
}

 /**
 * Decode a request
 */
function _simplenews_statistics_decode($values) {
  $pars = $values['p'];
  $pars_hash = $values['h'];
  
  if (isset($pars) && isset($pars_hash)) {
    $pars = _simplenews_statistics_decode_parameter($pars);
    $pars_hash = _simplenews_statistics_decode_parameter($pars_hash);
  
    if (md5($pars) == $pars_hash) {
      require_once drupal_get_path('module', 'simplenews_statistics') .'/rc4.inc';
      $pars = rc4Encrypt(simplenews_private_key(), $pars);
      parse_str($pars, $stat);
    }
  }
  
  foreach ($stat as $idx => $stat_param) {
    if ($idx != 'nid' && $idx != 'mail' && $idx != 'url') {
      $idx = str_replace('amp;', '', $idx);
      $stat['url'] = $stat['url'] .'&'. $idx .'='. $stat_param;
    }
  }
  
  return $stat;
}

function _simplenews_statistics_encode_parameter($par) {
  return strtr(base64_encode(addslashes(gzcompress(serialize($par), 9))), '+/=', '-_,');
}

function _simplenews_statistics_decode_parameter($par) {
  return unserialize(gzuncompress(stripslashes(base64_decode(strtr($par, '-_,', '+/=')))));
}

/*
 * Add click to total
 */
function _simplenews_statistics_click_add($nid) {
	db_query("UPDATE {simplenews_statistics} SET clicks = clicks+1 WHERE nid = :nid",array(':nid'=>$nid));
}

/*
 * Add open to total
 */
function _simplenews_statistics_open_add($nid) {
  db_query("UPDATE {simplenews_statistics} SET opens = opens+1 WHERE nid = :nid", array(':nid'=>$nid));
}

/**
 * Implementation of hook_views_api().

function simplenews_statistics_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'simplenews_statistics') .'/views',
  );
}
 */
